apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: docs-intro-layout-template
  title: Documentation Intro Layout Template
  description: Create a new standalone documentation project
  tags:
    - recommended
    - techdocs
    - mkdocs
spec:
  owner: backstage/techdocs-core
  type: documentation
  lifecycle: experimental

  parameters:
#    - title: About this template
#      ui:ObjectFieldTemplate: AboutStep
#    - title: First step
#      properties:
#        preconditions:
#          title: Preconditions
#          type: string
#          description: Choose an option
#          enum:
#            - optionA
#            - optionB
#          enumNames:
#            - Option A
#            - Option B
#      dependencies:
#        preconditions:
#          oneOf:
#            - title: About
#              description: you have chosen option A
#              properties:
#                preconditions:
#                  enum:
#                    - optionA
#            - title: About
#              description: you have chosen option B
#              properties:
#                preconditions:
#                  enum:
#                    - optionB
#    - title: Second step
#      dependencies:
#        preconditions:
#          oneOf:
#              - required:
#                - inputA
#                properties:
#                  preconditions:
#                    enum:
#                      - optionA
#                  inputA:
#                    title: Input A
#                    type: string
#              - required:
#                  - inputB
#                properties:
#                  preconditions:
#                    enum:
#                      - optionB
#                  inputA:
#                    title: Input B
#                    type: string
#    - title: About this template 2
#      ui:ObjectFieldTemplate: AboutStep
#      properties:
#        description:
#          title: Description
#          type: string
#          description: A description for the component
    - title: Fill in some steps
      ui:ObjectFieldTemplate: TwoColumn
      required:
        - name
        - description
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
          ui:autofocus: true
        description:
          title: Description
          type: string
          description: A description for the component
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  # This template is meant to be used on top of an existing template.
  # By adding the following and fetching from an absolute URL you can
  # add in the docs template
  steps:
    - id: fetch
      name: Template Docs Skeleton
      action: fetch:template
      input:
        url: ./skeleton
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}

    - id: mock-step-1
      name: Mock Step 1
      action: debug:wait
      input:
        seconds: 15

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: [ "github.com" ]
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: mock-step-2
      name: Mock Step 2
      action: debug:wait
      input:
        seconds: 15

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
